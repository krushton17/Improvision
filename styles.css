:root {
    --main-bg-color: black;

    --main-text-color: white;
    --main-font: 16px 'Varela Round', Helvetica, sans-serif;
    --mono-font: 20px 'Cutive Mono', Courier, monospace;

    --border-radius: 5px;
    --grid-gap: .5rem;

    --input-bg-color: lightgray;
    --input-text-color: black;
    --input-border: 1.5px solid lightgray;
    --input-hover-color: hotpink;
    --input-active-color: lightcyan;
    --hover-bg-color: gray;
    --hover-text-color: black;

    --text-input-bg-color: rgb(44, 36, 36);
    --text-input-text-color: lightcyan;

    --section-bg-color: white;
    --section-border: 2px solid black;
    --gui-text-color: black;

}
html {
    height: 100vh;
    width: 100vw;
}
body {
    font: var(--main-font);
    color: var(--main-text-color);
    background-color: var(--main-bg-color);

    /* really weird behavior here... */
    height: 100vh;
    margin: 0;
    box-sizing: border-box;

    display: grid;
    grid-template-columns: 1fr min-content;
    grid-template-rows: max-content 1fr;
    grid-template-areas: 
        'diagram dashboard'
        'gui text-box';
    grid-gap: var(--grid-gap);
}
@media (max-width:960px) {
    body {
        /* grid-template-columns: 1fr min-content; 
        grid-template-rows: max-content 1fr;          */
        grid-template-areas: 
            'diagram diagram'
            'gui dashboard';
    }
    #text-wrapper {
        display:none !important;
    }
}
/* inline text using unicode symbols */
.symbol {
    font-size:2.5em;
    vertical-align: middle;
}

/*diagram-----------------------------------------------*/
#diagram {
    /* margin: 10px; */
    /* padding-bottom: 10px; */
    overflow: hidden;
    background-color: black;
    
    grid-area: diagram;
    
    display: flex;
    flex-flow: row nowrap;
}
#head-container {
    flex: none;
}
#fret-container {
    cursor: move;
    overflow-x: scroll;
    overflow-y: hidden;

    flex: 1 1 0;
}
.fret {
    stroke: gray;
    stroke-width: 4px;
}
.marker {
    fill: var(--text-input-bg-color);
}
.marker12 {
    fill: rgb(66, 54, 54);
}
.note-circle {
    fill: var(--text-input-bg-color);
    stroke-width: 2px;
}
.head {
    stroke: gray;
}
.root {
    stroke: lightseagreen;
}
.guides {
    stroke: red;
}
.auxExp {
    stroke: hotpink;
}
.auxImp {
    stroke: darkorchid;
}
.strings {
    stroke: lightgray;
}
.note-text {
    fill: var(--main-text-color);
    font: var(--main-font);
    text-anchor: middle;
    stroke: none;
}

/*inputs-------------------------------------------*/
input, textarea, .button {
    -webkit-appearance: none;

    /* centers it */
    margin: auto;
    height: 2rem;
    /* no bigger than it needs to be, but at least 2rem */
    min-width: 2rem;
    max-width: min-content;

    background-color: var(--input-bg-color);
    
    border: var(--input-border);
    border-radius: var(--border-radius);

    color: var(--input-text-color);
    text-align: center;
}
input[type=button], .button {
    font-size:1.5rem;
}
input[type=button].symbol, .button.symbol {
    padding: 0 .25em .15em .25em;
}
input[type=checkbox]:hover, input[type=button]:hover, .button:hover {
    background-color: var(--input-hover-color);
    cursor: pointer;
}
input[type=button].active, input[type=checkbox]:checked {
    background-color: var(--input-active-color) !important;
}
textarea, input[type=text], input[type=number] {
    cursor: text;

    background-color: var(--text-input-bg-color);

    font: var(--mono-font);
    color: var(--text-input-text-color);
}
/* for Firefox */
input[type='number'] {
    -moz-appearance:textfield;
}
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
}

/* song mode playback dashboard-------------------------- */
#playback-dash {
    grid-area: dashboard;

    display: grid;
    grid-template-areas: 
        'buttons buttons'
        '. tempo'
        '. meter'
        '. swing'
        '. count-in'
        'counter counter';
    justify-content: center;
    grid-gap: var(--grid-gap);
}
#playback-dash > label {
    margin: auto 0;

    text-align: right;
}
/* @media (max-width:960px) {
    #song-metadata { display: none; }
} */
#playback-buttons {
    grid-area: buttons;
    margin: 0 auto;
}
#tempo, #meter, #count-in {
    width: 6ch;
}
#counter {
    grid-area: counter;
    /* set for max counter width (4/4:16chars) */
    width: 18ch;

    font-size: .85em;
}

/*song editor-----------------------------------------------*/
/* chord menu---------------------------------------------- */
#gui-wrapper {
    grid-area: gui;

    min-height: 0;

    display: flex;
    flex-flow: row nowrap;
} 
/* chord menu, etc. */
#chord-menu-wrapper {
    overflow: hidden;
    flex: none;
   /* ideal width for chord draggables, inc. margin/padding */
    width: 10ch;

    text-align: center;

    display: inline-flex;
    flex-flow: column nowrap;
}
#chord-menu-wrapper > * {
    background-color: white;
    color: black;
}
#chord-menu {
    /* wider than its container to hide scrollbar */
    width: 20ch;
    overflow-y: scroll;
    overflow-x: hidden;

    flex: 1 1 auto;
}
#chord-menu > * {
    /* override other drag-drop settings */
    display: block !important;
    /* ideal width for chord draggables */
    width: 6ch !important;
}
#trash, #spacer-menu {
    flex: 0 0 auto;
}
#spacer-menu > * {
    display: inline-block;
    vertical-align: middle;
}
#trash {
    height: 50;
}
#trash > * {
    /* prevents chords from appearing here before being deleted */
    display: none;
}

/* section menu ---------------------------------------*/
#section-menu {
    flex: 1 1 auto;

    display: inline-grid;
    grid-template-rows: auto auto 1fr;
    grid-template-areas:
        '. . . . .'
        'key sections pattern repeat-pattern repeat'
        'content content content content content';
    grid-gap: var(--grid-gap);
}
#section-menu > label {
    text-align: center;
}
#key {
    grid-area: key;
    width: 4ch;
}
#section-select {
    grid-area: sections;

    display: flex;
    flex-flow: row nowrap;
}
#pattern {
    grid-area: pattern;
}
#repeat-pattern {
    grid-area: repeat-pattern;
}
#pattern, #repeat-pattern {
    width: 12ch;
}
#repeat-toggle {
    grid-area: repeat;
}
#section-wrapper {
    overflow: scroll;
    background-color: var(--section-bg-color);

    grid-area: content;
}
.section {
    display: none;
}
/*gui drag zones and child elements*/
.gui-line {
    /* this widens the whole section wrapper, but without it the line wraps instead of scrolling sideways */
    /* width: max-content; */
}
.gui-line > * {
    display: inline-block;
    vertical-align: middle;
}
.drag-chord, .spacer-bar, .spacer-dot {
    cursor: move;
    margin: .5em;
}
.drag-chord:hover, .spacer-bar:hover, .spacer-dot:hover {
    background-color: var(--input-hover-color);
}
.drag-chord {
    background-color: var(--input-bg-color);
    color: var(--input-text-color);

    border: 2px solid black;
    border-radius: var(--border-radius);

    padding: .4em .35em .3em .35em;
}
.spacer-bar, .spacer-dot {
    background-color: black;
    border-radius: var(--border-radius);
}
.spacer-bar {
    width: 1em;
    height: 3em;
}
.spacer-dot {
    width: 1.5em;
    height: 1.5em;
}
.sort-select, .sort-drag {
    background-color: var(--input-active-color);
}
.sort-ghost {
    background-color: lightgray;
    opacity: .4;
}
.current-chord-gui {
    border-color: red;
}

/* text editor ---------------------------------*/
#text-wrapper {
    grid-area: text-box;

    display: flex;
    flex-flow: column nowrap;
}
#song-metadata {
    flex: 0 0 auto;

    display: grid;
    grid-template-areas: 
        '. .'
        '. .'
        '. .';
    grid-gap: var(--grid-gap);
}
#song-metadata > label {
    margin: auto 0;
    text-align: right;
}
#song-metadata > input {
    margin: 0;
}
#text-controls {
    margin: auto;
}
#upload {
    display: none;
}
#text-editor {
    flex: 1 1 auto;
    min-width: 30ch;

    resize: none;
    text-align: left;
}