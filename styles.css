:root {
    --main-bg-color: black;

    --main-text-color: white;
    --main-font: 16px 'Varela Round', Helvetica, sans-serif;
    --mono-font: 20px 'Cutive Mono', Courier, monospace;

    --border-radius: 5px;
    --grid-gap: .5rem;

    --input-bg-color: hsl(280, 61%, 35%);
    --input-text-color: white;
    --input-border: 1.5px solid turquoise;
    --input-hover-color: hotpink;
    --input-active-color: turquoise;
    --hover-bg-color: gray;
    --hover-text-color: black;

    --textbox-bg-color: rgb(44, 36, 36);
    --textbox-text-color: lightcyan;

    --range-thumb-height: 1rem;
    --range-thumb-width: .5rem;

    --section-bg-color: hsl(280, 30%, 15%);
    --section-border: 2px solid black;
    --gui-text-color: black;

}
html {
    /* height: 100vh;
    width: 100vw; */
}
body {
    font: var(--main-font);
    color: var(--main-text-color);
    background-color: var(--main-bg-color);

    height: calc(100vh - var(--grid-gap) * 2);
    /* seems to be unnecessary */
    /* width: calc(100vw - var(--grid-gap) * 2); */
    margin: var(--grid-gap);
    box-sizing: border-box;

    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-areas: 
        'diagram diagram'
        'text-box gui';
    grid-gap: var(--grid-gap);
}
/* @media (max-width:960px) {
    body { */
        /* grid-template-columns: 1fr min-content; 
        grid-template-rows: max-content 1fr;          */
        /* grid-template-areas: 
            'diagram diagram'
            'gui dashboard';
    }
    #text-wrapper {
        display:none !important;
    }
} */
/* inline text using unicode symbols */
.symbol {
    font-size:2.5em;
    vertical-align: middle;
}

/*diagram-----------------------------------------------*/
#diagram {
    /* margin: 10px; */
    /* padding-bottom: 10px; */
    overflow: hidden;
    background-color: black;
    
    grid-area: diagram;
    
    display: flex;
    flex-flow: row nowrap;
}
#head-container {
    flex: none;
}
#fret-container {
    cursor: move;
    overflow-x: scroll;
    overflow-y: hidden;

    flex: 1 1 0;
}
.fret {
    stroke: gray;
    stroke-width: 4px;
}
.marker {
    fill: var(--textbox-bg-color);
}
.marker12 {
    fill: rgb(66, 54, 54);
}
.note-circle {
    fill: var(--textbox-bg-color);
    stroke-width: 2px;
}
.head {
    stroke: gray;
}
.root {
    stroke: lightseagreen;
}
.guides {
    stroke: red;
}
.auxExp {
    stroke: hotpink;
}
.auxImp {
    stroke: darkorchid;
}
.strings {
    stroke: lightgray;
}
.note-text {
    fill: var(--main-text-color);
    font: var(--main-font);
    text-anchor: middle;
    stroke: none;
}

/*inputs-------------------------------------------*/
input, textarea, .button {
    -webkit-appearance: none;

    box-sizing: border-box;

    /* centers it */
    margin: auto;

    height: 1.6rem;
    /* no bigger than it needs to be, but at least 2rem */
    min-width: 2rem;

    /* max-width: min-content; */

    background-color: var(--input-bg-color);
    
    border: var(--input-border);
    border-radius: var(--border-radius);

    color: var(--input-text-color);
    text-align: center;
    vertical-align: middle;
}
input[type=button], .button {
    font-size:1.3rem;
}
input[type=button].symbol, .button.symbol {
    padding: 0 .25rem .15rem .25rem;
}
input[type=checkbox]:hover, input[type=button]:hover, .button:hover {
    background-color: var(--input-hover-color);
    cursor: pointer;
}
input[type=button].active, input[type=checkbox]:checked {
    background-color: var(--input-active-color) !important;
}
textarea, input[type=text], input[type=number] {
    cursor: text;

    background-color: var(--textbox-bg-color);

    font: var(--mono-font);
    color: var(--textbox-text-color);
}
/* for Firefox */
input[type='number'] {
    -moz-appearance:textfield;
}
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
}
.button > span {
    display: inline-block;
}
.button-mono {
    font: var(--mono-font);
    font-size: 1.25rem;
    margin-top: .1rem;
    vertical-align: top;
}
.button-symbol {
}
.button-high {
    margin-top: -.1rem;
    vertical-align: top;
}
.round-rect {
    border: 1.5px solid var(--input-text-color);
    border-radius: var(--border-radius);

    height: 1rem;

    padding-top: .1rem;
    font-size: .75rem;
    
    margin-top: .15rem;
    vertical-align: top;
}

/*song editor-----------------------------------------------*/
/* chord menu---------------------------------------------- */
#gui-wrapper {
    grid-area: gui;

    min-height: 0;

    display: grid;
    grid-template-columns: 1fr auto;
    grid-template-areas:
        '. chord-menu';
    grid-gap: var(--grid-gap);
} 
/* chord menu, etc. */
#chord-menu-wrapper {
    overflow: hidden;
    grid-area: chord-menu;

    background: var(--section-bg-color);
    text-align: center;
    /* color: black; */

    border: var(--input-border);
    border-radius: var(--border-radius);

    display: grid;
    grid-template-rows: auto 1fr auto auto;
    grid-gap: var(--grid-gap);
}
#chord-menu {
    overflow-y: scroll;

    display: grid;
    grid-template-rows: 1fr;
    grid-gap: var(--grid-gap);
}
#chord-menu > * {
    margin: 0 auto;
}
#spacer-menu > * {
    display: inline-block;
    vertical-align: middle;
}
#trash {
    height: 50;
    margin: auto;
}
#trash > * {
    /* prevents chords from appearing here before being deleted */
    display: none;
}

/* section menu ---------------------------------------*/
#section-menu {
    overflow: hidden;

    text-align: center;

    display: grid;
    grid-template-rows: auto auto 1fr;
    grid-template-areas:
        '. . . .'
        'key sections pattern repeat-pattern'
        'content content content content';
    grid-gap: var(--grid-gap);
    justify-content: stretch;
}
#key {
    grid-area: key;
    width: 4ch;
}
#section-select {
    grid-area: sections;

    display: flex;
    flex-flow: row nowrap;
}
#pattern {
    grid-area: pattern;
}
#repeat-pattern {
    grid-area: repeat-pattern;
}
#pattern, #repeat-pattern {
    width: 12ch;
}
#repeat-toggle {
    grid-area: repeat;
}
#section-wrapper {
    overflow: scroll;
    /* min-width: 100%; */

    background-color: var(--section-bg-color);

    border: var(--input-border);
    border-radius: var(--border-radius);

    grid-area: content;
}
.section {
    display: none;
}
/*gui drag zones and child elements*/
.gui-line {
    width: max-content;
}
.gui-line > * {
    display: inline-block;
    vertical-align: middle;
}
.drag-chord, .spacer-bar, .spacer-dot {
    cursor: move;
    margin: .5em;

    border: var(--input-border);

}
.drag-chord:hover, .spacer-bar:hover, .spacer-dot:hover {
    background-color: var(--input-hover-color);
}
.drag-chord {
    background-color: var(--input-bg-color);
    color: var(--input-text-color);

    border: var(--input-border);
    border-radius: var(--border-radius);

    padding: .4em .35em .3em .35em;
}
.spacer-bar, .spacer-dot {
    background-color: black;
    border-radius: var(--border-radius);
}
.spacer-bar {
    width: 1em;
    height: 3em;
}
.spacer-dot {
    width: 1.5em;
    height: 1.5em;
}
.sort-select, .sort-drag {
    background-color: var(--input-active-color);
}
.sort-ghost {
    background-color: lightgray;
    opacity: .4;
}
.current-chord-gui {
    border-color: red;
}

/* text editor ---------------------------------*/
#text-wrapper {
    grid-area: text-box;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto auto 1fr;
    grid-template-areas:
        '.'
        '.'
        '.'
        '.';
    grid-gap: var(--grid-gap);
}
/* song mode playback dashboard */
#playback-dash {
    /* grid-area: dashboard; */
    border: var(--input-border);
    border-radius: var(--border-radius);
    padding: var(--grid-gap);

    display: grid;
    grid-template-areas: 
        'buttons . .'
        'buttons . .';
    justify-content: center;
    grid-gap: var(--grid-gap);
}
#playback-dash > label {
    margin: auto 0;

    text-align: right;
}
/* @media (max-width:960px) {
    #song-metadata { display: none; }
} */
#playback-buttons {
    grid-area: buttons;
    margin: auto;
}
#tempo, #meter, #count-in {
    width: 6ch;
}
#counter {
    grid-area: counter;
    /* set for max counter width (4/4:16chars) */
    width: 18ch;

    font-size: .85em;
}
/* metadata */
#song-metadata {
    /* flex: 0 0 auto; */

    display: grid;
    grid-template-areas: 
        '. .'
        '. .';
    grid-gap: var(--grid-gap);
}
#song-metadata > label {
    margin: auto 0;
    text-align: right;
}
#song-metadata > input {
    margin: 0;
}
#text-controls {
    /* display: flex; */
    /* flex-flow: row nowrap; */
    display: grid;
    grid-template-areas: 
        '. . . .';
    grid-gap: var(--grid-gap);
}
#upload {
    display: none;
}
#text-editor {
    /* flex: 1 1 auto; */
    min-width: 30ch;
    height: 100%;

    resize: none;
    text-align: left;
}


/* &#x1d11e;
                    &#x1d122;
                    &#x1f941;
                    &#x1f568;
                    &#x1f569;
                    
                    &flat;&sharp;&natural;&deg;&#x1d1a9;
                    */


/* obnoxious inputs------------------- */

input[type=range] {
    -webkit-appearance: none;
    /* so the other input defaults don't affec this one */
    background: none;
    border: none;
    margin: auto;
  }
  input[type=range]:focus {
    outline: none;
  }
  input[type=range]::-webkit-slider-runnable-track {
    cursor: pointer;
    height: calc(var(--range-thumb-height) / 2);
    background: var(--textbox-bg-color);
    border-radius: var(--border-radius);
    border: var(--input-border);
  }
  input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    cursor: pointer;
    border: var(--input-border);
    height: var(--range-thumb-height);
    width: var(--range-thumb-width);
    border-radius: var(--border-radius);
    background: var(--input-bg-color);
    /* I don't know why /3 is the magic formula here, but it works */
    margin-top: calc(var(--range-thumb-height) / -3);
  }
  /* these have to stay separate from the chrome ones or they won't work */
  input[type=range]::-moz-range-track {
    cursor: pointer;
    width: 100%;
    height: 8.3px;
    background: var(--textbox-bg-color);
    border-radius: var(--border-radius);
    border: var(--input-border);;
  }
  input[type=range]::-moz-range-thumb {
    cursor: pointer;
    border: var(--input-border);;
    height: 23px;
    width: 13px;
    border-radius: var(--border-radius);
    background: var(--input-bg-color);
  }
  /* nothing below here has been touched really */
  input[type=range]::-ms-track {
    width: 100%;
    height: 8.3px;
    cursor: pointer;
    background: transparent;
    border-color: transparent;
    color: transparent;
  }
  input[type=range]::-ms-fill-lower {
    background: #3071a9;
    border: 1.5px solid #ec0101;
    border-radius: 27.4px;
    box-shadow: 0px 0px 0.3px rgba(0, 0, 0, 0), 0px 0px 0px rgba(13, 13, 13, 0);
  }
  input[type=range]::-ms-fill-upper {
    background: #3071a9;
    border: 1.5px solid #ec0101;
    border-radius: 27.4px;
    box-shadow: 0px 0px 0.3px rgba(0, 0, 0, 0), 0px 0px 0px rgba(13, 13, 13, 0);
  }
  input[type=range]::-ms-thumb {
    box-shadow: 0px 0px 0px rgba(0, 0, 0, 0), 0px 0px 0px rgba(13, 13, 13, 0);
    border: 1.5px solid #00ff00;
    height: 23px;
    width: 13px;
    border-radius: 5px;
    background: #ff4400;
    cursor: pointer;
    height: 8.3px;
  }
  input[type=range]:focus::-ms-fill-lower {
    background: #3071a9;
  }
  input[type=range]:focus::-ms-fill-upper {
    background: #3071a9;
  }
  