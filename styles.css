:root {
    --main-bg-color: black;

    --main-text-color: white;
    --main-font: 16px 'Varela Round', Helvetica, sans-serif;
    --mono-font: 20px 'Cutive Mono', Courier, monospace;

    --border-radius: 5px;

    --input-bg-color: lightgray;
    --input-text-color: black;
    --input-border: 1.5px solid lightgray;
    --input-hover-color: hotpink;
    --input-active-color: lightcyan;
    --hover-bg-color: gray;
    --hover-text-color: black;

    --text-input-bg-color: rgb(44, 36, 36);
    --text-input-text-color: lightcyan;

    --tab-content-bg-color: white;
    --tab-content-border: 2px solid black;
    --GUI-text-color: black;

}

body {
    font: var(--main-font);
    color: var(--main-text-color);
    background-color: var(--main-bg-color);
    white-space: nowrap;
    overflow-x: hidden;
}
/*inputs-----------------------------------------------*/
input, textarea {
    -webkit-appearance: none;
    cursor: pointer;
    border: var(--input-border);
    border-radius: var(--border-radius);
    text-align: center;
    padding: 5px;
    margin: 5px;
    font: inherit;
    background-color: var(--input-bg-color);
    color: var(--input-text-color);
}
input[type=checkbox] {
    vertical-align: middle;
    height: 32px;
    width: 32px;
}
input[type=checkbox]:hover, input[type=button]:hover {
    background-color: var(--input-hover-color);
    cursor: pointer;
}
input[type=checkbox]:active input[type=button].active {
    /*why doesn't this override the hover color?*/
    background-color: var(--input-active-color) !important;
}
input[type=checkbox]:checked {
    background-color: var(--input-active-color);
}
textarea, input[type=text], input[type=number] {
    cursor: text;
    background-color: var(--text-input-bg-color);
    font: var(--mono-font);
    color: var(--text-input-text-color);
}
textarea {
    height: 85%;
    width: 400;
    resize: none;
    display: block;
    text-align: left;
    margin-top: 16px;
}
#file-load {
    display: block;
}
#tempo {
    width: 50px;
}
#timeMarquis {
    width: 250px;
}
#timeSig {
    width: 50px;
}

/*diagram-----------------------------------------------*/
.diagram {
    margin-left: 10px;
    display: inline-block;
    overflow: hidden;
    vertical-align: top;
}
.fret {
    stroke: gray;
    stroke-width: 4px;
}
.fretContainer {
    display: inline-block;
}
.headContainer {
    display: inline-block;
    vertical-align: top;
}
.marker {
    fill: var(--text-input-bg-color);
}
.marker12 {
    fill: rgb(66, 54, 54);
}
.note {
    fill: var(--text-input-bg-color);
    stroke-width: 2px;
    r: 16; /*do I want to define this here, or programmatically for animations?*/
}
.head {
    stroke: gray;
}
.root {
    stroke: lightseagreen;
}
.guides {
    stroke: red;
}
.auxExp {
    stroke: hotpink;
}
.auxImp {
    stroke: darkorchid;
}
.strings {
    stroke: lightgray;
}
.text {
    fill: var(--main-text-color);
    font: var(--main-font);
    text-anchor: middle;
    stroke: none;
}

/*GUI editor-----------------------------------------------*/
.GUI-wrapper {
    color: var(--GUI-text-color);
    border: var(--input-border);
    padding: 10px;
    margin: 10px;
    border-radius: var(--border-radius);
    /*overflow-y: scroll;*/
    height: 400px;
    display: inline-block;
    background-color: white;
    overflow: scroll;
}
#menu-wrapper {
    width: 100;
}
#chord-menu {
    margin: 0;
    padding: 0;
}
#tab-wrapper {
    width: 800;
}
#text-wrapper {
    overflow: hidden;
}
#text-wrapper > * {
    display: block;
}
#file-container {
    cursor: pointer;
    position: relative;
    border: var(--input-border);
    border-radius: var(--border-radius);
    text-align: center;
    padding: 5px;
    margin: 5px;
    width: 150px;
    font: inherit;
    background-color: var(--input-bg-color);
    color: var(--input-text-color);
}
#file-container:hover {
    background-color: var(--input-hover-color);
}
#file-container [type=file] {
    cursor: inherit;
    display: block;
    min-height: 100%;
    min-width: 100%;
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
}
.drag-zone {
    margin: 8 20;
    padding: 8 0;
}
/*GUI song meta-data*/
#section-order, #repeat-order {
    width: 100;
}
/*GUI tabs*/
.tab, tab > * {
    display: inline-block;
    vertical-align: middle;
}
.tab > input[type=button] {
    /*background-color: inherit;*/
    border: var(--tab-content-border);
    cursor: pointer;
    padding: 10px;
    margin: 5px;
    border-radius: var(--border-radius);
    transition: 0.3s;
    font: inherit;
}
.tab-content {
    border: var(--tab-content-border);
    background-color: var(--tab-content-bg-color);
    border-radius: var(--border-radius);
    display: none;
    margin: 10 0;
}
/*GUI drag zones and child elements*/
.drag-zone > * {
    display: inline-block;
}
.drag-zone > div:hover {
    background-color: var(--input-hover-color);
}
#chord-menu > * {
    display: block !important;
}
#trash {
    width: 100;
    height: 100;
    margin: 0;
    padding: 0;
}
#trash > * {
    display: none;
}
#symbol-menu {
    margin: 0;
    padding: 0;
}
.drag-chord, .spacer-bar, .spacer-dot {
    cursor: move;
}
.drag-chord {
    background-color: lightgray;
    font: var(--main-text-color);
    color: black;
    border: 1.5px solid black;
    padding: 10px;
    border-radius: var(--border-radius);
    margin: 5px;
    text-align: center;
}
.spacer-bar, .spacer-dot {
    background-color: black;
    margin: 5px;
    border-radius: var(--border-radius);
    display: inline-block;
    vertical-align: middle;
}
.spacer-bar {
    width: 10px;
    height: 40px;
}
.spacer-dot {
    width: 20px;
    height: 20px;
}
.sort-select, .sort-drag {
    background-color: var(--input-active-color);
}
.sort-ghost {
    background-color: lightgray;
    opacity: .4;
}
.current-chord-GUI {
    border-color: red;
}



table {
    color: black;
    position: absolute;
    text-align: center;
}
td {
    color: inherit;
    padding: 0 20;
}
td > * {
    display: inline;
}
#special {
    padding: 0;
    margin: 0;
}